---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';

// デバッグ情報を追加
console.log('コンテンツコレクションを読み込み中...');

// Markdownファイルからデータを読み込み
const tripInfo = await getCollection('trip');
const scheduleData = await getCollection('trip');
const spotsData = await getCollection('trip');

console.log('tripInfo:', tripInfo);
console.log('scheduleData:', scheduleData);
console.log('spotsData:', spotsData);

// 特定のファイルをフィルタリング
const info = tripInfo.find(item => item.id === 'info.md');
const schedule = scheduleData.find(item => item.id === 'schedule.md');
const spots = spotsData.find(item => item.id === 'spots.md');
const accommodation = tripInfo.find(item => item.id === 'accommodation.md');

// デバッグ情報を追加
console.log('tripInfo:', tripInfo);
console.log('accommodation:', accommodation);

// データが存在しない場合のフォールバック
if (!info) {
  throw new Error('info.mdファイルが見つかりません');
}
if (!schedule) {
  throw new Error('schedule.mdファイルが見つかりません');
}
if (!spots) {
  throw new Error('spots.mdファイルが見つかりません');
}
if (!accommodation) {
  console.warn('accommodation.mdファイルが見つかりません');
}

// スケジュールデータを解析
const scheduleContent = schedule.body;
const day1Match = scheduleContent.match(/# 一日目\n([\s\S]*?)(?=# 二日目|$)/);
const day2Match = scheduleContent.match(/# 二日目\n([\s\S]*?)$/);

const parseScheduleItems = (content: string) => {
  const items: Array<{
    time: string;
    title: string;
    details: string[];
    participants: string;
    link: string;
  }> = [];
  
  // より柔軟な正規表現で時間とタイトルをマッチ（~を含む時間形式も対応）
  const scheduleMatches = content.match(/^## ([\d:~]+) - (.+)$/gm);
  
  if (scheduleMatches) {
    for (const match of scheduleMatches) {
      const timeMatch = match.match(/^## ([\d:~]+) - (.+)$/);
      if (timeMatch) {
        const time = timeMatch[1];
        const title = timeMatch[2];
        
        // この項目の詳細を取得
        const itemStart = content.indexOf(match);
        const nextItemMatch = content.substring(itemStart + match.length).match(/^## /m);
        const itemEnd = nextItemMatch ? itemStart + match.length + nextItemMatch.index! : content.length;
        const itemContent = content.substring(itemStart, itemEnd);
        
        const details: string[] = [];
        let participants = '';
        let link = '';
        
        // 詳細情報を解析
        const detailMatches = itemContent.match(/^- \*\*([^:]+)\*\*: (.+)$/gm);
        if (detailMatches) {
          for (const detailMatch of detailMatches) {
            const detailParts = detailMatch.match(/^- \*\*([^:]+)\*\*: (.+)$/);
            if (detailParts) {
              const key = detailParts[1];
              const value = detailParts[2];
              
              if (key === '参加者') {
                participants = value;
              } else if (key === '詳細') {
                details.push(value);
              } else if (key === 'リンク') {
                link = value;
              }
            }
          }
        }
        
        console.log('Parsed item:', { time, title, details, participants, link });
        items.push({
          time,
          title,
          details,
          participants,
          link
        });
      }
    }
  }
  
  return items;
};

const day1Items = day1Match ? parseScheduleItems(day1Match[1]) : [];
const day2Items = day2Match ? parseScheduleItems(day2Match[1]) : [];

// デバッグ情報を追加
console.log('Day 1 Items:', day1Items);
console.log('Day 2 Items:', day2Items);

// 観光スポットデータを解析
const spotsContent = spots.body;
const spotsSections = spotsContent.split(/# /).filter((section: string) => section.trim());

const parseSpots = (content: string) => {
  const spots: Array<{
    title: string;
    icon: string;
    backgroundImage: string;
    description: string;
    link: string;
    category: string;
    subSpots: string[];
    isReturnSpot: boolean;
  }> = [];
  
  // メタデータ部分を除外してスポット部分のみを取得
  const contentWithoutMeta = content.replace(/^---[\s\S]*?---\n/, '');
  
  // 帰り道セクションの位置を特定
  const returnSectionIndex = contentWithoutMeta.indexOf('# 帰り道');
  
  // セクションごとに分割
  const sections = contentWithoutMeta.split('## ').filter((section: string) => section.trim());
  
  for (const section of sections) {
    const lines = section.split('\n');
    const title = lines[0].trim();
    
    // セクションタイトル（# で始まる行）をスキップ
    if (title.startsWith('#')) {
      continue;
    }
    
    // このセクションが帰り道セクションの後にあるかチェック
    const sectionStartIndex = contentWithoutMeta.indexOf(section);
    const isReturnSpot = returnSectionIndex !== -1 && sectionStartIndex > returnSectionIndex;
    
    const spot: {
      title: string;
      icon: string;
      backgroundImage: string;
      description: string;
      link: string;
      category: string;
      subSpots: string[];
      isReturnSpot: boolean;
    } = {
      title,
      icon: '🏛️',
      backgroundImage: '',
      description: '',
      link: '',
      category: '',
      subSpots: [],
      isReturnSpot
    };
    
    for (const line of lines.slice(1)) {
      if (line.includes('**アイコン**:')) {
        spot.icon = line.split('**アイコン**:')[1].trim();
      } else if (line.includes('**背景画像**:')) {
        spot.backgroundImage = line.split('**背景画像**:')[1].trim();
      } else if (line.includes('**説明**:')) {
        spot.description = line.split('**説明**:')[1].trim();
      } else if (line.includes('**リンク**:')) {
        spot.link = line.split('**リンク**:')[1].trim();
      } else if (line.includes('**カテゴリ**:')) {
        spot.category = line.split('**カテゴリ**:')[1].trim();
      } else if (line.includes('**スポット**:')) {
        // サブスポットの処理
        const subSpotsMatch = section.match(/\*\*スポット\*\*:\n((?:  - .*\n?)*)/);
        if (subSpotsMatch) {
          const subSpotsLines = subSpotsMatch[1].split('\n').filter((line: string) => line.trim().startsWith('  - '));
          spot.subSpots = subSpotsLines.map((line: string) => line.trim().substring(4));
        }
      }
    }
    
    if (spot.title && spot.description) {
      spots.push(spot);
    }
  }
  
  return spots;
};

const allSpots = parseSpots(spotsContent);
const mainSpots = allSpots.filter(spot => !spot.isReturnSpot);
const returnSpots = allSpots.filter(spot => spot.isReturnSpot);

// デバッグ情報を追加
console.log('All Spots:', allSpots);
console.log('Main Spots:', mainSpots);
console.log('Return Spots:', returnSpots);
---

<Layout title={info.data.title}>
  <!-- ヒーローセクション -->
  <section class="relative h-screen flex items-center justify-center overflow-hidden">
    <!-- 背景画像とオーバーレイ -->
    <div class="absolute inset-0 bg-gradient-to-r from-blue-900/80 to-purple-900/80 z-10"></div>
    <div class="absolute inset-0 bg-cover bg-center bg-no-repeat" style={`background-image: url('${info.data.heroImage}')`}></div>
    
    <!-- メインコンテンツ -->
    <div class="relative z-20 text-center text-white px-4">
      <h1 class="text-6xl md:text-8xl font-bold mb-6 animate-fade-in">
        🗻 {info.data.title.split(' ')[0]}
      </h1>
      <h2 class="text-4xl md:text-6xl font-light mb-8 animate-fade-in-delay">
        {info.data.title.split(' ').slice(1).join(' ')}
      </h2>
      <p class="text-xl md:text-2xl mb-12 opacity-90 animate-fade-in-delay-2">
        {info.data.subtitle}
      </p>
      <div class="flex flex-wrap justify-center gap-6 text-sm md:text-base">
        <span class="bg-white/20 backdrop-blur-sm px-4 py-2 rounded-full">📅 {info.data.date}</span>
        <span class="bg-white/20 backdrop-blur-sm px-4 py-2 rounded-full">📍 {info.data.location}</span>
        <span class="bg-white/20 backdrop-blur-sm px-4 py-2 rounded-full">👥 {info.data.participants}</span>
      </div>
    </div>
    
    <!-- スクロールインジケーター -->
    <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 z-20 animate-bounce">
      <div class="w-6 h-10 border-2 border-white rounded-full flex justify-center">
        <div class="w-1 h-3 bg-white rounded-full mt-2 animate-pulse"></div>
      </div>
    </div>
  </section>

  <div class="container mx-auto px-4 py-16">
    <!-- ナビゲーション -->
    <nav class="sticky top-0 z-50 bg-white/95 backdrop-blur-sm shadow-lg rounded-full mx-auto max-w-4xl mb-16">
      <div class="flex justify-center space-x-8 p-6">
        <a href="#schedule" class="text-blue-600 hover:text-blue-800 font-semibold transition-all duration-300 hover:scale-110 flex items-center">
          <span class="text-2xl mr-2">📅</span>
          スケジュール
        </a>
        <a href="#spots" class="text-blue-600 hover:text-blue-800 font-semibold transition-all duration-300 hover:scale-110 flex items-center">
          <span class="text-2xl mr-2">🏛️</span>
          観光スポット
        </a>
        <a href="#info" class="text-blue-600 hover:text-blue-800 font-semibold transition-all duration-300 hover:scale-110 flex items-center">
          <span class="text-2xl mr-2">ℹ️</span>
          基本情報
        </a>
        <a href="#accommodation" class="text-blue-600 hover:text-blue-800 font-semibold transition-all duration-300 hover:scale-110 flex items-center">
          <span class="text-2xl mr-2">🏠</span>
          宿泊情報（概要）
        </a>
        <a href="/accommodation/" class="text-purple-600 hover:text-purple-800 font-semibold transition-all duration-300 hover:scale-110 flex items-center">
          <span class="text-2xl mr-2">🏠</span>
          宿泊情報（詳細ページ）
        </a>
      </div>
    </nav>

    <!-- スケジュールセクション -->
    <section id="schedule" class="mb-24">
      <div class="text-center mb-16">
        <h2 class="text-5xl font-bold text-gray-800 mb-4">📅 スケジュール</h2>
        <p class="text-xl text-gray-600">{schedule.data.description}</p>
      </div>
      
      <!-- 一日目 -->
      <div class="bg-gradient-to-br from-blue-50 to-indigo-100 rounded-3xl shadow-2xl p-8 mb-12 transform hover:scale-105 transition-all duration-500">
        <div class="flex items-center mb-8">
          <div class="bg-blue-600 text-white rounded-full w-16 h-16 flex items-center justify-center text-2xl font-bold mr-6">
            1
          </div>
          <h3 class="text-3xl font-bold text-blue-600">一日目</h3>
        </div>
        <div class="relative">
          {/* タイムラインの縦線 */}
          <div class="absolute left-8 top-0 bottom-0 w-0.5 bg-blue-200"></div>
          
          <div class="space-y-8">
            {day1Items.filter(item => item.title && item.time).map((item, index) => (
              <div class="relative flex items-start">
                {/* タイムラインの点と線 */}
                <div class="flex-shrink-0 w-16 h-16 flex items-center justify-center relative">
                  <div class={`w-4 h-4 rounded-full border-4 border-white shadow-lg ${index % 4 === 0 ? 'bg-blue-500' : index % 4 === 1 ? 'bg-green-500' : index % 4 === 2 ? 'bg-purple-500' : 'bg-orange-500'}`}></div>
                  {/* 次の項目への線（最後の項目以外） */}
                  {index < day1Items.filter(item => item.title && item.time).length - 1 && (
                    <div class="absolute top-16 left-1/2 transform -translate-x-1/2 w-0.5 h-8 bg-blue-200"></div>
                  )}
                </div>
                
                {/* コンテンツ */}
                <div class="ml-6 flex-1 bg-white rounded-2xl p-6 shadow-lg hover:shadow-xl transition-shadow">
                  <div class="flex items-center mb-4">
                    <span class={`font-bold text-lg ${index % 4 === 0 ? 'text-blue-600' : index % 4 === 1 ? 'text-green-600' : index % 4 === 2 ? 'text-purple-600' : 'text-orange-600'}`}>{item.time}</span>
                  </div>
                  <h4 class="text-xl font-semibold mb-3">{item.title}</h4>
                  <p class="text-gray-600 mb-3">{item.details.join(', ')}</p>
                  {item.link && (
                    <a href={item.link} target="_blank" class="text-blue-600 hover:underline text-sm">
                      詳細を見る →
                    </a>
                  )}
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>

      <!-- 二日目 -->
      <div class="bg-gradient-to-br from-green-50 to-emerald-100 rounded-3xl shadow-2xl p-8 transform hover:scale-105 transition-all duration-500">
        <div class="flex items-center mb-8">
          <div class="bg-green-600 text-white rounded-full w-16 h-16 flex items-center justify-center text-2xl font-bold mr-6">
            2
          </div>
          <h3 class="text-3xl font-bold text-green-600">二日目</h3>
        </div>
        <div class="relative">
          {/* タイムラインの縦線 */}
          <div class="absolute left-8 top-0 bottom-0 w-0.5 bg-green-200"></div>
          
          <div class="space-y-8">
            {day2Items.filter(item => item.title && item.time).map((item, index) => (
              <div class="relative flex items-start">
                {/* タイムラインの点と線 */}
                <div class="flex-shrink-0 w-16 h-16 flex items-center justify-center relative">
                  <div class={`w-4 h-4 rounded-full border-4 border-white shadow-lg ${index % 4 === 0 ? 'bg-green-500' : index % 4 === 1 ? 'bg-red-500' : index % 4 === 2 ? 'bg-blue-500' : 'bg-purple-500'}`}></div>
                  {/* 次の項目への線（最後の項目以外） */}
                  {index < day2Items.filter(item => item.title && item.time).length - 1 && (
                    <div class="absolute top-16 left-1/2 transform -translate-x-1/2 w-0.5 h-8 bg-green-200"></div>
                  )}
                </div>
                
                {/* コンテンツ */}
                <div class="ml-6 flex-1 bg-white rounded-2xl p-6 shadow-lg hover:shadow-xl transition-shadow">
                  <div class="flex items-center mb-4">
                    <span class={`font-bold text-lg ${index % 4 === 0 ? 'text-green-600' : index % 4 === 1 ? 'text-red-600' : index % 4 === 2 ? 'text-blue-600' : 'text-purple-600'}`}>{item.time}</span>
                  </div>
                  <h4 class="text-xl font-semibold mb-3">{item.title}</h4>
                  <p class="text-gray-600 mb-3">{item.details.join(', ')}</p>
                  {item.link && (
                    <a href={item.link} target="_blank" class="text-blue-600 hover:underline text-sm">
                      詳細を見る →
                    </a>
                  )}
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </section>

    <!-- 観光スポットセクション -->
    <section id="spots" class="mb-24">
      <div class="text-center mb-16">
        <h2 class="text-5xl font-bold text-gray-800 mb-4">🏛️ 観光スポット</h2>
        <p class="text-xl text-gray-600">{spots.data.description}</p>
      </div>
      
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {mainSpots.map((spot, index) => (
          <div class="group bg-white rounded-3xl shadow-xl overflow-hidden transform hover:scale-105 transition-all duration-500">
            <div class={`h-48 flex items-center justify-center relative overflow-hidden ${
              spot.backgroundImage ? 'bg-cover bg-center' : 
              index % 6 === 0 ? 'bg-gradient-to-br from-blue-400 to-purple-600' :
              index % 6 === 1 ? 'bg-gradient-to-br from-pink-400 to-red-600' :
              index % 6 === 2 ? 'bg-gradient-to-br from-green-400 to-blue-600' :
              index % 6 === 3 ? 'bg-gradient-to-br from-purple-400 to-indigo-600' :
              index % 6 === 4 ? 'bg-gradient-to-br from-yellow-400 to-orange-600' :
              'bg-gradient-to-br from-red-400 to-pink-600'
            }`} style={spot.backgroundImage ? `background-image: url('${spot.backgroundImage}')` : ''}>
              {spot.backgroundImage ? (
                <div class="absolute inset-0 bg-black/30 flex items-center justify-center">
                  <span class="text-6xl text-white drop-shadow-lg">{spot.icon}</span>
                </div>
              ) : (
                <span class="text-6xl">{spot.icon}</span>
              )}
            </div>
            <div class="p-6">
              <h3 class="text-xl font-bold text-gray-800 mb-4">{spot.title}</h3>
              <p class="text-gray-600 mb-4">{spot.description}</p>
              {spot.subSpots && spot.subSpots.length > 0 && (
                <ul class="text-gray-600 mb-4 space-y-2 text-sm">
                  {spot.subSpots.map((subSpot: string) => (
                    <li>• {subSpot}</li>
                  ))}
                </ul>
              )}
              {spot.link && (
                <a href={spot.link} target="_blank" class="inline-flex items-center text-blue-600 hover:text-blue-800 font-semibold transition-colors">
                  詳細を見る
                  <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                  </svg>
                </a>
              )}
            </div>
          </div>
        ))}
      </div>

      <!-- 帰り道セクション -->
      {returnSpots.length > 0 && (
        <div class="mt-20">
          <div class="text-center mb-12">
            <h3 class="text-4xl font-bold text-gray-800 mb-4">🛣️ 帰り道</h3>
            <p class="text-xl text-gray-600">帰りも楽しいスポット</p>
          </div>
          <div class="grid md:grid-cols-2 gap-8">
            {returnSpots.map((spot, index) => (
              <div class="group bg-white rounded-3xl shadow-xl overflow-hidden transform hover:scale-105 transition-all duration-500">
                <div class={`h-48 flex items-center justify-center relative overflow-hidden ${
                  spot.backgroundImage ? 'bg-cover bg-center' : 
                  index % 2 === 0 ? 'bg-gradient-to-br from-gray-400 to-gray-600' : 'bg-gradient-to-br from-yellow-400 to-amber-600'
                }`} style={spot.backgroundImage ? `background-image: url('${spot.backgroundImage}')` : ''}>
                  {spot.backgroundImage ? (
                    <div class="absolute inset-0 bg-black/30 flex items-center justify-center">
                      <span class="text-6xl text-white drop-shadow-lg">{spot.icon}</span>
                    </div>
                  ) : (
                    <span class="text-6xl">{spot.icon}</span>
                  )}
                </div>
                <div class="p-6">
                  <h4 class="text-xl font-bold text-gray-800 mb-4">{spot.title}</h4>
                  <p class="text-gray-600 mb-4">{spot.description}</p>
                  {spot.link && (
                    <a href={spot.link} target="_blank" class="inline-flex items-center text-blue-600 hover:text-blue-800 font-semibold transition-colors">
                      詳細を見る
                      <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                      </svg>
                    </a>
                  )}
                </div>
              </div>
            ))}
          </div>
        </div>
              )}

        <!-- マップセクション -->
        <div class="mt-20">
          <div class="text-center mb-12">
            <h3 class="text-4xl font-bold text-gray-800 mb-4">🗺️ 観光マップ</h3>
            <p class="text-xl text-gray-600">飛騨高山の観光スポットマップ</p>
          </div>
          
          <div class="bg-white rounded-3xl shadow-2xl overflow-hidden transform hover:scale-105 transition-all duration-500">
            <div class="relative w-full h-96 md:h-[600px]">
              <iframe 
                src="https://www.google.com/maps/d/u/0/embed?mid=13SyNhKPb3h3C7nmrzGpuFpqcLrHOAbU&ehbc=2E312F" 
                class="w-full h-full border-0"
                title="飛騨高山観光マップ"
                loading="lazy"
                allowfullscreen
              ></iframe>
            </div>
            
            <!-- マップの説明 -->
            <div class="p-6 bg-gradient-to-r from-blue-50 to-indigo-50">
              <div class="flex items-center justify-between">
                <div>
                  <h4 class="text-lg font-semibold text-gray-800 mb-2">🗺️ 観光スポットマップ</h4>
                  <p class="text-gray-600 text-sm">各観光スポットの位置とルートを確認できます</p>
                </div>
                <a 
                  href="https://www.google.com/maps/d/u/0/viewer?mid=13SyNhKPb3h3C7nmrzGpuFpqcLrHOAbU" 
                  target="_blank" 
                  class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm font-semibold"
                >
                  大きなマップで見る
                  <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                  </svg>
                </a>
              </div>
            </div>
          </div>
        </div>

      </section>

    <!-- 基本情報セクション -->
    <section id="info" class="mb-24">
      <div class="text-center mb-16">
        <h2 class="text-5xl font-bold text-gray-800 mb-4">ℹ️ 基本情報</h2>
        <p class="text-xl text-gray-600">旅行の詳細情報</p>
      </div>
      
      <div class="grid md:grid-cols-2 gap-12">
        <div class="bg-gradient-to-br from-blue-50 to-indigo-100 rounded-3xl shadow-2xl p-8 transform hover:scale-105 transition-all duration-500">
          <h3 class="text-2xl font-bold text-blue-600 mb-6 flex items-center">
            <span class="text-3xl mr-3">📋</span>
            旅行概要
          </h3>
          <ul class="space-y-4 text-gray-700">
            <li class="flex items-center">
              <span class="w-3 h-3 bg-blue-500 rounded-full mr-4"></span>
              <strong class="mr-2">期間:</strong> {info.data.duration}
            </li>
            <li class="flex items-center">
              <span class="w-3 h-3 bg-blue-500 rounded-full mr-4"></span>
              <strong class="mr-2">目的地:</strong> {info.data.location}
            </li>
            <li class="flex items-center">
              <span class="w-3 h-3 bg-blue-500 rounded-full mr-4"></span>
              <strong class="mr-2">参加者:</strong> {info.data.participants}
            </li>
            <li class="flex items-center">
              <span class="w-3 h-3 bg-blue-500 rounded-full mr-4"></span>
              <strong class="mr-2">交通手段:</strong> {info.data.transportation}
            </li>
          </ul>
        </div>
        
        <div class="bg-gradient-to-br from-red-50 to-pink-100 rounded-3xl shadow-2xl p-8 transform hover:scale-105 transition-all duration-500">
          <h3 class="text-2xl font-bold text-red-600 mb-6 flex items-center">
            <span class="text-3xl mr-3">⚠️</span>
            注意事項
          </h3>
          <ul class="space-y-4 text-gray-700">
            <li class="flex items-start">
              <span class="w-3 h-3 bg-red-500 rounded-full mr-4 mt-2"></span>
              高山陣屋集合時は全員で行動
            </li>
            <li class="flex items-start">
              <span class="w-3 h-3 bg-red-500 rounded-full mr-4 mt-2"></span>
              各自の責任で観光スポットを選択
            </li>
            <li class="flex items-start">
              <span class="w-3 h-3 bg-red-500 rounded-full mr-4 mt-2"></span>
              解散時間を守る
            </li>
            <li class="flex items-start">
              <span class="w-3 h-3 bg-red-500 rounded-full mr-4 mt-2"></span>
              安全第一で行動
            </li>
          </ul>
        </div>
      </div>
    </section>

    <!-- 宿泊情報セクション -->
    {accommodation && (
      <section id="accommodation" class="mb-24">
        <div class="text-center mb-16">
          <h2 class="text-5xl font-bold text-gray-800 mb-4">🏠 宿泊情報</h2>
          <p class="text-xl text-gray-600">{accommodation.data.description}</p>
        </div>
        
        <div class="bg-gradient-to-br from-purple-50 to-pink-100 rounded-3xl shadow-2xl p-8 transform hover:scale-105 transition-all duration-500">
          <div class="text-center mb-8">
            <h3 class="text-3xl font-bold text-purple-600 mb-4 flex items-center justify-center">
              <span class="text-4xl mr-3">🏠</span>
              {accommodation.data.subtitle}
            </h3>
            <p class="text-lg text-gray-600 mb-6">古民家をリノベーションした宿で、飛騨の伝統的な雰囲気を楽しめます</p>
          </div>
          
          <div class="grid md:grid-cols-3 gap-6 mb-8">
            <div class="bg-white/50 rounded-lg p-4 text-center">
              <div class="text-3xl mb-2">👥</div>
              <h4 class="font-bold text-purple-600 mb-1">宿泊人数</h4>
              <p class="text-gray-700">{accommodation.data.participants}</p>
            </div>
            <div class="bg-white/50 rounded-lg p-4 text-center">
              <div class="text-3xl mb-2">📅</div>
              <h4 class="font-bold text-purple-600 mb-1">宿泊期間</h4>
              <p class="text-gray-700">{accommodation.data.duration}</p>
            </div>
            <div class="bg-white/50 rounded-lg p-4 text-center">
              <div class="text-4xl mb-2">📍</div>
              <h4 class="font-bold text-purple-600 mb-1">場所</h4>
              <p class="text-gray-700">{accommodation.data.location}</p>
            </div>
          </div>
          
          <div class="grid md:grid-cols-2 gap-6 mb-8">
            <div class="bg-white/50 rounded-lg p-4">
              <h4 class="text-lg font-bold text-purple-600 mb-3">🏗️ 設備</h4>
              <ul class="space-y-2 text-sm text-gray-700">
                <li class="flex items-center">
                  <span class="w-2 h-2 bg-purple-500 rounded-full mr-3"></span>
                  <strong>キッチン:</strong> 完備（自炊可能）
                </li>
                <li class="flex items-center">
                  <span class="w-2 h-2 bg-purple-500 rounded-full mr-3"></span>
                  <strong>温泉:</strong> 近隣の銭湯利用可能
                </li>
                <li class="flex items-center">
                  <span class="w-2 h-2 bg-purple-500 rounded-full mr-3"></span>
                  <strong>Wi-Fi SSID:</strong> TP-Link_EBB0
                </li>
                <li class="flex items-center">
                  <span class="w-2 h-2 bg-purple-500 rounded-full mr-3"></span>
                  <strong>Wi-Fi パスワード:</strong> 93055680
                </li>
                <li class="flex items-center">
                  <span class="w-2 h-2 bg-purple-500 rounded-full mr-3"></span>
                  <strong>駐車場:</strong> 近くのコインパーキングを利用してください。
                </li>
              </ul>
            </div>
            
            <div class="bg-white/50 rounded-lg p-4">
              <h4 class="text-lg font-bold text-purple-600 mb-3">✨ 特徴</h4>
              <ul class="space-y-2 text-sm text-gray-700">
                <li class="flex items-start">
                  <span class="w-2 h-2 bg-purple-500 rounded-full mr-3 mt-2"></span>
                  古民家をリノベーションした宿
                </li>
                <li class="flex items-start">
                  <span class="w-2 h-2 bg-purple-500 rounded-full mr-3 mt-2"></span>
                  広いリビングでみんなで過ごせる
                </li>
                <li class="flex items-start">
                  <span class="w-2 h-2 bg-purple-500 rounded-full mr-3 mt-2"></span>
                  キッチンでみんなで料理を作れる
                </li>
                <li class="flex items-start">
                  <span class="w-2 h-2 bg-purple-500 rounded-full mr-3 mt-2"></span>
                  静かな環境でゆっくり過ごせる
                </li>
              </ul>
            </div>
          </div>

          <div class="bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded relative" role="alert">
            <strong class="font-bold">注意！</strong>
            <span class="block sm:inline">タオル・歯ブラシを持参することを忘れないでください。</span>
          </div>

          <div class="p-10"></div>
          
          <div class="text-center">
            <a 
              href="/accommodation/" 
              class="inline-flex items-center px-8 py-4 bg-purple-600 text-white rounded-full hover:bg-purple-700 transition-colors font-semibold text-lg transform hover:scale-105"
            >
              <svg class="w-6 h-6 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
              </svg>
              詳細情報を見る
            </a>
          </div>
        </div>
      </section>
    )}

    <!-- フッター -->
    <footer class="text-center py-16">
      <div class="bg-gradient-to-r from-blue-600 to-purple-600 rounded-3xl p-8 text-white">
        <h3 class="text-3xl font-bold mb-4">🗻 {info.data.title}</h3>
        <p class="text-xl opacity-90">素晴らしい思い出を作りましょう！</p>

      </div>
    </footer>
  </div>
</Layout>

<style>
  @keyframes fade-in {
    from { opacity: 0; transform: translateY(30px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  @keyframes fade-in-delay {
    from { opacity: 0; transform: translateY(30px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  @keyframes fade-in-delay-2 {
    from { opacity: 0; transform: translateY(30px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  .animate-fade-in {
    animation: fade-in 1s ease-out;
  }
  
  .animate-fade-in-delay {
    animation: fade-in-delay 1s ease-out 0.3s both;
  }
  
  .animate-fade-in-delay-2 {
    animation: fade-in-delay-2 1s ease-out 0.6s both;
  }
</style>
